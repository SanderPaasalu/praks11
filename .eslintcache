[{"C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\index.js":"1","C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\App.js":"2","C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\components\\Recipe.js":"3","C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\components\\RecipeList.js":"4","C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\components\\NewRecipe.js":"5"},{"size":433,"mtime":1610958338287,"results":"6","hashOfConfig":"7"},{"size":1333,"mtime":1611047424237,"results":"8","hashOfConfig":"7"},{"size":762,"mtime":1611048517330,"results":"9","hashOfConfig":"7"},{"size":559,"mtime":1611744502579,"results":"10","hashOfConfig":"7"},{"size":2253,"mtime":1611048075755,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"jgv6hu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\index.js",[],["26","27"],"C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\App.js",["28","29","30"],"import React, {useEffect, useState} from 'react';\nimport { BrowserRouter, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport NewRecipe from './components/NewRecipe';\nimport Recipe from \"./components/Recipe\";\nimport RecipeList from './components/RecipeList';\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    getRecipes();\n  }, []);  \n  function getRecipes() {\n    fetch(\"data/data.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n    .then(result => {\n    return result.json();\n    })\n    .then(data => {\n    console.log(data);\n    setRecipes(data)\n    })\n  }\n\n  function addRecipe(newRecipe) {\n    setRecipes(recipes.concat([newRecipe]));\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <h1 className='flex-main' className='header-main'>Retseptiraamat</h1>\n          <Link className='flex-main' className='link-main' to={'/new'}>Lisa uus retsept</Link>\n          <RecipeList recipes={recipes} />\n        </Route>\n        <Route path=\"/recipes/:id\">\n          <Recipe recipes={recipes} />\n        </Route>\n        <Route path='/new'>\n          <NewRecipe addRecipe={addRecipe} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\components\\Recipe.js",["31"],"import React from 'react';\r\nimport { withRouter, Link, useParams } from \"react-router-dom\";\r\n\r\nconst Recipe = (props) => {\r\n    const id = useParams().id;\r\n    return (\r\n      <div className='flex'>\r\n        <Link to={'/'}>Tagasi avalehele</Link>\r\n        <h2>{props.recipes[id].name}</h2>\r\n        <p>{props.recipes[id].duration} min</p>\r\n        <ul>\r\n          {props.recipes[id].ingredients.map((ingredients, index) => {\r\n          return <li key={ingredients}>{ingredients}</li>;\r\n          })}\r\n        </ul>\r\n        <p>{props.recipes[id].preparation}</p>\r\n        <p>Tags:{props.recipes[id].tags.map((tags, index) => {\r\n          return <li className='tag-list' key={tags}>{tags}</li>;\r\n        })}</p>\r\n      </div>\r\n    )\r\n  }\r\n  export default Recipe;","C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\components\\RecipeList.js",["32","33"],"C:\\Users\\Sander\\Documents\\Praks 11\\my-app\\src\\components\\NewRecipe.js",["34"],"import React, {useState, useEffect} from 'react';\r\nimport { withRouter, Link, useParams } from \"react-router-dom\";\r\n\r\nconst NewRecipe = (props) => {\r\n    const [name, setName] = useState();\r\n    const [time, setTime] =  useState();\r\n    const [ingredients, setIngredients] =  useState();\r\n    const [prep, setPrep] =  useState();\r\n    const [tag, setTag] = useState()\r\n    const [newRecipe, setNewRecipe] =  useState([]);\r\n\r\n    function combineRecipe(event) {\r\n        event.preventDefault()\r\n        const ingred = ingredients.split(',')\r\n        const tagi = tag.split(',') \r\n        setNewRecipe ({\r\n            name: name,\r\n            duration: time,\r\n            ingredients: ingred,\r\n            preparation: prep,\r\n            tags: tagi,\r\n        })\r\n    \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(newRecipe).length !== 0) {\r\n          props.addRecipe(newRecipe);\r\n          props.history.push(\"/\");\r\n          setNewRecipe({});\r\n        }\r\n      }, [newRecipe, props]);\r\n\r\n    return (\r\n        <form>\r\n            <Link to={'/'}>Tagasi avalehele</Link><br/>\r\n            <label>Nimi</label><br/>\r\n            <input type='text' id='name' name='nimi' onInput={(event) => {\r\n                setName(event.target.value);\r\n            }} required/><br/>\r\n            <label>Koostisosad</label><br/>\r\n            <input type='text' id='ingredients' name='Koostisosad' onInput={(event) => {\r\n                setIngredients(event.target.value);\r\n            }} required/><br/>\r\n            <label>Valmistusaeg(min)</label><br/>\r\n            <input type='number' id='time' name='Valmistusaeg(min)' onInput={(event) => {\r\n                setTime(event.target.value);\r\n            }} required/><br/>\r\n            <label>Tagid(max 2)</label><br/>\r\n            <input type='text' id='tag' name='Tagid' onInput={(event) => {\r\n                setTag(event.target.value);\r\n            }} required/><br/>\r\n            <label>valmistamine</label><br/>\r\n            <textarea id='' name='' onInput={(event) => {\r\n                setPrep(event.target.value);\r\n            }} required></textarea><br/>\r\n            <button type='submit' onClick={combineRecipe}>Salvesta</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(NewRecipe);",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":46,"nodeType":"41","messageId":"42","endLine":2,"endColumn":55},{"ruleId":"43","severity":1,"message":"44","line":37,"column":37,"nodeType":"45","endLine":37,"endColumn":60},{"ruleId":"43","severity":1,"message":"44","line":38,"column":39,"nodeType":"45","endLine":38,"endColumn":60},{"ruleId":"39","severity":1,"message":"46","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":20},{"ruleId":"39","severity":1,"message":"46","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":20},{"ruleId":"39","severity":1,"message":"40","line":2,"column":28,"nodeType":"41","messageId":"42","endLine":2,"endColumn":37},{"ruleId":"39","severity":1,"message":"40","line":2,"column":28,"nodeType":"41","messageId":"42","endLine":2,"endColumn":37},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]